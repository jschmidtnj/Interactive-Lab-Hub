/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_TRANSIT_REALTIME_GTFS_REALTIME_PB_H_INCLUDED
#define PB_TRANSIT_REALTIME_GTFS_REALTIME_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _transit_realtime_FeedHeader_Incrementality { 
    transit_realtime_FeedHeader_Incrementality_FULL_DATASET = 0, 
    transit_realtime_FeedHeader_Incrementality_DIFFERENTIAL = 1 
} transit_realtime_FeedHeader_Incrementality;

typedef enum _transit_realtime_TripUpdate_StopTimeUpdate_ScheduleRelationship { 
    transit_realtime_TripUpdate_StopTimeUpdate_ScheduleRelationship_SCHEDULED = 0, 
    transit_realtime_TripUpdate_StopTimeUpdate_ScheduleRelationship_SKIPPED = 1, 
    transit_realtime_TripUpdate_StopTimeUpdate_ScheduleRelationship_NO_DATA = 2 
} transit_realtime_TripUpdate_StopTimeUpdate_ScheduleRelationship;

typedef enum _transit_realtime_VehiclePosition_VehicleStopStatus { 
    transit_realtime_VehiclePosition_VehicleStopStatus_INCOMING_AT = 0, 
    transit_realtime_VehiclePosition_VehicleStopStatus_STOPPED_AT = 1, 
    transit_realtime_VehiclePosition_VehicleStopStatus_IN_TRANSIT_TO = 2 
} transit_realtime_VehiclePosition_VehicleStopStatus;

typedef enum _transit_realtime_VehiclePosition_CongestionLevel { 
    transit_realtime_VehiclePosition_CongestionLevel_UNKNOWN_CONGESTION_LEVEL = 0, 
    transit_realtime_VehiclePosition_CongestionLevel_RUNNING_SMOOTHLY = 1, 
    transit_realtime_VehiclePosition_CongestionLevel_STOP_AND_GO = 2, 
    transit_realtime_VehiclePosition_CongestionLevel_CONGESTION = 3, 
    transit_realtime_VehiclePosition_CongestionLevel_SEVERE_CONGESTION = 4 
} transit_realtime_VehiclePosition_CongestionLevel;

typedef enum _transit_realtime_VehiclePosition_OccupancyStatus { 
    transit_realtime_VehiclePosition_OccupancyStatus_EMPTY = 0, 
    transit_realtime_VehiclePosition_OccupancyStatus_MANY_SEATS_AVAILABLE = 1, 
    transit_realtime_VehiclePosition_OccupancyStatus_FEW_SEATS_AVAILABLE = 2, 
    transit_realtime_VehiclePosition_OccupancyStatus_STANDING_ROOM_ONLY = 3, 
    transit_realtime_VehiclePosition_OccupancyStatus_CRUSHED_STANDING_ROOM_ONLY = 4, 
    transit_realtime_VehiclePosition_OccupancyStatus_FULL = 5, 
    transit_realtime_VehiclePosition_OccupancyStatus_NOT_ACCEPTING_PASSENGERS = 6 
} transit_realtime_VehiclePosition_OccupancyStatus;

typedef enum _transit_realtime_Alert_Cause { 
    transit_realtime_Alert_Cause_UNKNOWN_CAUSE = 1, 
    transit_realtime_Alert_Cause_OTHER_CAUSE = 2, 
    transit_realtime_Alert_Cause_TECHNICAL_PROBLEM = 3, 
    transit_realtime_Alert_Cause_STRIKE = 4, 
    transit_realtime_Alert_Cause_DEMONSTRATION = 5, 
    transit_realtime_Alert_Cause_ACCIDENT = 6, 
    transit_realtime_Alert_Cause_HOLIDAY = 7, 
    transit_realtime_Alert_Cause_WEATHER = 8, 
    transit_realtime_Alert_Cause_MAINTENANCE = 9, 
    transit_realtime_Alert_Cause_CONSTRUCTION = 10, 
    transit_realtime_Alert_Cause_POLICE_ACTIVITY = 11, 
    transit_realtime_Alert_Cause_MEDICAL_EMERGENCY = 12 
} transit_realtime_Alert_Cause;

typedef enum _transit_realtime_Alert_Effect { 
    transit_realtime_Alert_Effect_NO_SERVICE = 1, 
    transit_realtime_Alert_Effect_REDUCED_SERVICE = 2, 
    transit_realtime_Alert_Effect_SIGNIFICANT_DELAYS = 3, 
    transit_realtime_Alert_Effect_DETOUR = 4, 
    transit_realtime_Alert_Effect_ADDITIONAL_SERVICE = 5, 
    transit_realtime_Alert_Effect_MODIFIED_SERVICE = 6, 
    transit_realtime_Alert_Effect_OTHER_EFFECT = 7, 
    transit_realtime_Alert_Effect_UNKNOWN_EFFECT = 8, 
    transit_realtime_Alert_Effect_STOP_MOVED = 9 
} transit_realtime_Alert_Effect;

typedef enum _transit_realtime_TripDescriptor_ScheduleRelationship { 
    transit_realtime_TripDescriptor_ScheduleRelationship_SCHEDULED = 0, 
    transit_realtime_TripDescriptor_ScheduleRelationship_ADDED = 1, 
    transit_realtime_TripDescriptor_ScheduleRelationship_UNSCHEDULED = 2, 
    transit_realtime_TripDescriptor_ScheduleRelationship_CANCELED = 3 
} transit_realtime_TripDescriptor_ScheduleRelationship;

/* Struct definitions */
typedef struct _transit_realtime_TranslatedString { 
    pb_callback_t translation; 
    pb_extension_t *extensions; 
} transit_realtime_TranslatedString;

typedef struct _transit_realtime_TranslatedString_Translation { 
    pb_callback_t text; 
    pb_callback_t language; 
    pb_extension_t *extensions; 
} transit_realtime_TranslatedString_Translation;

/* An internationalized message containing per-language versions of a snippet of
 text or a URL.
 One of the strings from a message will be picked up. The resolution proceeds
 as follows:
 1. If the UI language matches the language code of a translation,
    the first matching translation is picked.
 2. If a default UI language (e.g., English) matches the language code of a
    translation, the first matching translation is picked.
 3. If some translation has an unspecified language code, that translation is
    picked. */
typedef struct _transit_realtime_VehicleDescriptor { 
    /* At least one translation must be provided. */
    pb_callback_t id; 
    pb_callback_t label; 
    pb_callback_t license_plate; 
    pb_extension_t *extensions; 
} transit_realtime_VehicleDescriptor;

/* A position. */
typedef struct _transit_realtime_Alert { 
    /* Degrees North, in the WGS-84 coordinate system. */
    pb_callback_t active_period; 
    /* Degrees East, in the WGS-84 coordinate system. */
    pb_callback_t informed_entity; 
    /* Bearing, in degrees, clockwise from North, i.e., 0 is North and 90 is East.
 This can be the compass bearing, or the direction towards the next stop
 or intermediate location.
 This should not be direction deduced from the sequence of previous
 positions, which can be computed from previous data. */
    bool has_cause;
    transit_realtime_Alert_Cause cause; 
    /* Odometer value, in meters. */
    bool has_effect;
    transit_realtime_Alert_Effect effect; 
    /* Momentary speed measured by the vehicle, in meters per second. */
    bool has_url;
    transit_realtime_TranslatedString url; 
    bool has_header_text;
    transit_realtime_TranslatedString header_text; 
    bool has_description_text;
    transit_realtime_TranslatedString description_text; 
    pb_extension_t *extensions; 
} transit_realtime_Alert;

/* Metadata about a feed, included in feed messages. */
typedef struct _transit_realtime_FeedHeader { 
    /* Version of the feed specification.
 The current version is 2.0. */
    pb_callback_t gtfs_realtime_version; 
    bool has_incrementality;
    transit_realtime_FeedHeader_Incrementality incrementality; 
    /* This timestamp identifies the moment when the content of this feed has been
 created (in server time). In POSIX time (i.e., number of seconds since
 January 1st 1970 00:00:00 UTC). */
    bool has_timestamp;
    uint64_t timestamp; 
    pb_extension_t *extensions; 
} transit_realtime_FeedHeader;

/* Identification information for the vehicle performing the trip. */
typedef struct _transit_realtime_Position { 
    /* Internal system identification of the vehicle. Should be unique per
 vehicle, and can be used for tracking the vehicle as it proceeds through
 the system. */
    float latitude; 
    /* User visible label, i.e., something that must be shown to the passenger to
 help identify the correct vehicle. */
    float longitude; 
    /* The license plate of the vehicle. */
    bool has_bearing;
    float bearing; 
    bool has_odometer;
    double odometer; 
    bool has_speed;
    float speed; 
    pb_extension_t *extensions; 
} transit_realtime_Position;

/* A descriptor that identifies an instance of a GTFS trip, or all instances of
 a trip along a route.
 - To specify a single trip instance, the trip_id (and if necessary,
   start_time) is set. If route_id is also set, then it should be same as one
   that the given trip corresponds to.
 - To specify all the trips along a given route, only the route_id should be
   set. Note that if the trip_id is not known, then stop sequence ids in
   TripUpdate are not sufficient, and stop_ids must be provided as well. In
   addition, absolute arrival/departure times must be provided. */
typedef struct _transit_realtime_TimeRange { 
    /* The trip_id from the GTFS feed that this selector refers to.
 For non frequency-based trips, this field is enough to uniquely identify
 the trip. For frequency-based trip, start_time and start_date might also be
 necessary. */
    bool has_start;
    uint64_t start; 
    /* The route_id from the GTFS that this selector refers to. */
    bool has_end;
    uint64_t end; 
    /* The direction_id from the GTFS feed trips.txt file, indicating the
 direction of travel for trips this selector refers to. This field is
 still experimental, and subject to change. It may be formally adopted in
 the future. */
    pb_extension_t *extensions; 
} transit_realtime_TimeRange;

/* A selector for an entity in a GTFS feed. */
typedef struct _transit_realtime_TripDescriptor { 
    /* The values of the fields should correspond to the appropriate fields in the
 GTFS feed.
 At least one specifier must be given. If several are given, then the
 matching has to apply to all the given specifiers. */
    pb_callback_t trip_id; 
    pb_callback_t start_time; 
    /* corresponds to route_type in GTFS. */
    pb_callback_t start_date; 
    bool has_schedule_relationship;
    transit_realtime_TripDescriptor_ScheduleRelationship schedule_relationship; 
    pb_callback_t route_id; 
    bool has_direction_id;
    uint32_t direction_id; 
    pb_extension_t *extensions; 
} transit_realtime_TripDescriptor;

/* Realtime positioning information for a given vehicle. */
typedef struct _transit_realtime_TripUpdate_StopTimeEvent { 
    /* The Trip that this vehicle is serving.
 Can be empty or partial if the vehicle can not be identified with a given
 trip instance. */
    bool has_delay;
    int32_t delay; 
    /* Additional information on the vehicle that is serving this trip. */
    bool has_time;
    int64_t time; 
    /* Current position of this vehicle. */
    bool has_uncertainty;
    int32_t uncertainty; 
    /* The stop sequence index of the current stop. The meaning of
 current_stop_sequence (i.e., the stop that it refers to) is determined by
 current_status.
 If current_status is missing IN_TRANSIT_TO is assumed. */
    pb_extension_t *extensions; 
} transit_realtime_TripUpdate_StopTimeEvent;

typedef struct _transit_realtime_EntitySelector { 
    pb_callback_t agency_id; 
    pb_callback_t route_id; 
    bool has_route_type;
    int32_t route_type; 
    bool has_trip;
    transit_realtime_TripDescriptor trip; 
    pb_callback_t stop_id; 
    pb_extension_t *extensions; 
} transit_realtime_EntitySelector;

/* The contents of a feed message.
 A feed is a continuous stream of feed messages. Each message in the stream is
 obtained as a response to an appropriate HTTP GET request.
 A realtime feed is always defined with relation to an existing GTFS feed.
 All the entity ids are resolved with respect to the GTFS feed.
 Note that "required" and "optional" as stated in this file refer to Protocol
 Buffer cardinality, not semantic cardinality.  See reference.md at
 https://github.com/google/transit/tree/master/gtfs-realtime for field
 semantic cardinality. */
typedef struct _transit_realtime_FeedMessage { 
    /* Metadata about this feed and feed message. */
    transit_realtime_FeedHeader header; 
    /* Contents of the feed. */
    pb_callback_t entity; 
    pb_extension_t *extensions; 
} transit_realtime_FeedMessage;

/* Realtime update of the progress of a vehicle along a trip.
 Depending on the value of ScheduleRelationship, a TripUpdate can specify:
 - A trip that proceeds along the schedule.
 - A trip that proceeds along a route but has no fixed schedule.
 - A trip that have been added or removed with regard to schedule.

 The updates can be for future, predicted arrival/departure events, or for
 past events that already occurred.
 Normally, updates should get more precise and more certain (see
 uncertainty below) as the events gets closer to current time.
 Even if that is not possible, the information for past events should be
 precise and certain. In particular, if an update points to time in the past
 but its update's uncertainty is not 0, the client should conclude that the
 update is a (wrong) prediction and that the trip has not completed yet.

 Note that the update can describe a trip that is already completed.
 To this end, it is enough to provide an update for the last stop of the trip.
 If the time of that is in the past, the client will conclude from that that
 the whole trip is in the past (it is possible, although inconsequential, to
 also provide updates for preceding stops).
 This option is most relevant for a trip that has completed ahead of schedule,
 but according to the schedule, the trip is still proceeding at the current
 time. Removing the updates for this trip could make the client assume
 that the trip is still proceeding.
 Note that the feed provider is allowed, but not required, to purge past
 updates - this is one case where this would be practically useful. */
typedef struct _transit_realtime_TripUpdate { 
    /* The Trip that this message applies to. There can be at most one
 TripUpdate entity for each actual trip instance.
 If there is none, that means there is no prediction information available.
 It does *not* mean that the trip is progressing according to schedule. */
    transit_realtime_TripDescriptor trip; 
    /* Additional information on the vehicle that is serving this trip. */
    pb_callback_t stop_time_update; 
    /* Updates to StopTimes for the trip (both future, i.e., predictions, and in
 some cases, past ones, i.e., those that already happened).
 The updates must be sorted by stop_sequence, and apply for all the
 following stops of the trip up to the next specified one.

 Example 1:
 For a trip with 20 stops, a StopTimeUpdate with arrival delay and departure
 delay of 0 for stop_sequence of the current stop means that the trip is
 exactly on time.

 Example 2:
 For the same trip instance, 3 StopTimeUpdates are provided:
 - delay of 5 min for stop_sequence 3
 - delay of 1 min for stop_sequence 8
 - delay of unspecified duration for stop_sequence 10
 This will be interpreted as:
 - stop_sequences 3,4,5,6,7 have delay of 5 min.
 - stop_sequences 8,9 have delay of 1 min.
 - stop_sequences 10,... have unknown delay. */
    bool has_vehicle;
    transit_realtime_VehicleDescriptor vehicle; 
    /* Moment at which the vehicle's real-time progress was measured. In POSIX
 time (i.e., the number of seconds since January 1st 1970 00:00:00 UTC). */
    bool has_timestamp;
    uint64_t timestamp; 
    /* The current schedule deviation for the trip.  Delay should only be
 specified when the prediction is given relative to some existing schedule
 in GTFS.

 Delay (in seconds) can be positive (meaning that the vehicle is late) or
 negative (meaning that the vehicle is ahead of schedule). Delay of 0
 means that the vehicle is exactly on time.

 Delay information in StopTimeUpdates take precedent of trip-level delay
 information, such that trip-level delay is only propagated until the next
 stop along the trip with a StopTimeUpdate delay value specified.

 Feed providers are strongly encouraged to provide a TripUpdate.timestamp
 value indicating when the delay value was last updated, in order to
 evaluate the freshness of the data.

 NOTE: This field is still experimental, and subject to change. It may be
 formally adopted in the future. */
    bool has_delay;
    int32_t delay; 
    pb_extension_t *extensions; 
} transit_realtime_TripUpdate;

/* An alert, indicating some sort of incident in the public transit network. */
typedef struct _transit_realtime_TripUpdate_StopTimeUpdate { 
    /* Time when the alert should be shown to the user. If missing, the
 alert will be shown as long as it appears in the feed.
 If multiple ranges are given, the alert will be shown during all of them. */
    bool has_stop_sequence;
    uint32_t stop_sequence; 
    /* Entities whose users we should notify of this alert. */
    bool has_arrival;
    transit_realtime_TripUpdate_StopTimeEvent arrival; 
    bool has_departure;
    transit_realtime_TripUpdate_StopTimeEvent departure; 
    pb_callback_t stop_id; 
    /* The URL which provides additional information about the alert. */
    bool has_schedule_relationship;
    transit_realtime_TripUpdate_StopTimeUpdate_ScheduleRelationship schedule_relationship; 
    /* Alert header. Contains a short summary of the alert text as plain-text. */
    pb_extension_t *extensions; 
} transit_realtime_TripUpdate_StopTimeUpdate;

/* A time interval. The interval is considered active at time 't' if 't' is
 greater than or equal to the start time and less than the end time. */
typedef struct _transit_realtime_VehiclePosition { 
    /* Start time, in POSIX time (i.e., number of seconds since January 1st 1970
 00:00:00 UTC).
 If missing, the interval starts at minus infinity. */
    bool has_trip;
    transit_realtime_TripDescriptor trip; 
    /* End time, in POSIX time (i.e., number of seconds since January 1st 1970
 00:00:00 UTC).
 If missing, the interval ends at plus infinity. */
    bool has_position;
    transit_realtime_Position position; 
    bool has_current_stop_sequence;
    uint32_t current_stop_sequence; 
    bool has_current_status;
    transit_realtime_VehiclePosition_VehicleStopStatus current_status; 
    bool has_timestamp;
    uint64_t timestamp; 
    bool has_congestion_level;
    transit_realtime_VehiclePosition_CongestionLevel congestion_level; 
    pb_callback_t stop_id; 
    bool has_vehicle;
    transit_realtime_VehicleDescriptor vehicle; 
    bool has_occupancy_status;
    transit_realtime_VehiclePosition_OccupancyStatus occupancy_status; 
    pb_extension_t *extensions; 
} transit_realtime_VehiclePosition;

/* A definition (or update) of an entity in the transit feed. */
typedef struct _transit_realtime_FeedEntity { 
    /* The ids are used only to provide incrementality support. The id should be
 unique within a FeedMessage. Consequent FeedMessages may contain
 FeedEntities with the same id. In case of a DIFFERENTIAL update the new
 FeedEntity with some id will replace the old FeedEntity with the same id
 (or delete it - see is_deleted below).
 The actual GTFS entities (e.g. stations, routes, trips) referenced by the
 feed must be specified by explicit selectors (see EntitySelector below for
 more info). */
    pb_callback_t id; 
    /* Whether this entity is to be deleted. Relevant only for incremental
 fetches. */
    bool has_is_deleted;
    bool is_deleted; 
    /* Data about the entity itself. Exactly one of the following fields must be
 present (unless the entity is being deleted). */
    bool has_trip_update;
    transit_realtime_TripUpdate trip_update; 
    bool has_vehicle;
    transit_realtime_VehiclePosition vehicle; 
    bool has_alert;
    transit_realtime_Alert alert; 
    pb_extension_t *extensions; 
} transit_realtime_FeedEntity;


/* Helper constants for enums */
#define _transit_realtime_FeedHeader_Incrementality_MIN transit_realtime_FeedHeader_Incrementality_FULL_DATASET
#define _transit_realtime_FeedHeader_Incrementality_MAX transit_realtime_FeedHeader_Incrementality_DIFFERENTIAL
#define _transit_realtime_FeedHeader_Incrementality_ARRAYSIZE ((transit_realtime_FeedHeader_Incrementality)(transit_realtime_FeedHeader_Incrementality_DIFFERENTIAL+1))

#define _transit_realtime_TripUpdate_StopTimeUpdate_ScheduleRelationship_MIN transit_realtime_TripUpdate_StopTimeUpdate_ScheduleRelationship_SCHEDULED
#define _transit_realtime_TripUpdate_StopTimeUpdate_ScheduleRelationship_MAX transit_realtime_TripUpdate_StopTimeUpdate_ScheduleRelationship_NO_DATA
#define _transit_realtime_TripUpdate_StopTimeUpdate_ScheduleRelationship_ARRAYSIZE ((transit_realtime_TripUpdate_StopTimeUpdate_ScheduleRelationship)(transit_realtime_TripUpdate_StopTimeUpdate_ScheduleRelationship_NO_DATA+1))

#define _transit_realtime_VehiclePosition_VehicleStopStatus_MIN transit_realtime_VehiclePosition_VehicleStopStatus_INCOMING_AT
#define _transit_realtime_VehiclePosition_VehicleStopStatus_MAX transit_realtime_VehiclePosition_VehicleStopStatus_IN_TRANSIT_TO
#define _transit_realtime_VehiclePosition_VehicleStopStatus_ARRAYSIZE ((transit_realtime_VehiclePosition_VehicleStopStatus)(transit_realtime_VehiclePosition_VehicleStopStatus_IN_TRANSIT_TO+1))

#define _transit_realtime_VehiclePosition_CongestionLevel_MIN transit_realtime_VehiclePosition_CongestionLevel_UNKNOWN_CONGESTION_LEVEL
#define _transit_realtime_VehiclePosition_CongestionLevel_MAX transit_realtime_VehiclePosition_CongestionLevel_SEVERE_CONGESTION
#define _transit_realtime_VehiclePosition_CongestionLevel_ARRAYSIZE ((transit_realtime_VehiclePosition_CongestionLevel)(transit_realtime_VehiclePosition_CongestionLevel_SEVERE_CONGESTION+1))

#define _transit_realtime_VehiclePosition_OccupancyStatus_MIN transit_realtime_VehiclePosition_OccupancyStatus_EMPTY
#define _transit_realtime_VehiclePosition_OccupancyStatus_MAX transit_realtime_VehiclePosition_OccupancyStatus_NOT_ACCEPTING_PASSENGERS
#define _transit_realtime_VehiclePosition_OccupancyStatus_ARRAYSIZE ((transit_realtime_VehiclePosition_OccupancyStatus)(transit_realtime_VehiclePosition_OccupancyStatus_NOT_ACCEPTING_PASSENGERS+1))

#define _transit_realtime_Alert_Cause_MIN transit_realtime_Alert_Cause_UNKNOWN_CAUSE
#define _transit_realtime_Alert_Cause_MAX transit_realtime_Alert_Cause_MEDICAL_EMERGENCY
#define _transit_realtime_Alert_Cause_ARRAYSIZE ((transit_realtime_Alert_Cause)(transit_realtime_Alert_Cause_MEDICAL_EMERGENCY+1))

#define _transit_realtime_Alert_Effect_MIN transit_realtime_Alert_Effect_NO_SERVICE
#define _transit_realtime_Alert_Effect_MAX transit_realtime_Alert_Effect_STOP_MOVED
#define _transit_realtime_Alert_Effect_ARRAYSIZE ((transit_realtime_Alert_Effect)(transit_realtime_Alert_Effect_STOP_MOVED+1))

#define _transit_realtime_TripDescriptor_ScheduleRelationship_MIN transit_realtime_TripDescriptor_ScheduleRelationship_SCHEDULED
#define _transit_realtime_TripDescriptor_ScheduleRelationship_MAX transit_realtime_TripDescriptor_ScheduleRelationship_CANCELED
#define _transit_realtime_TripDescriptor_ScheduleRelationship_ARRAYSIZE ((transit_realtime_TripDescriptor_ScheduleRelationship)(transit_realtime_TripDescriptor_ScheduleRelationship_CANCELED+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define transit_realtime_FeedMessage_init_default {transit_realtime_FeedHeader_init_default, {{NULL}, NULL}, NULL}
#define transit_realtime_FeedHeader_init_default {{{NULL}, NULL}, false, transit_realtime_FeedHeader_Incrementality_FULL_DATASET, false, 0, NULL}
#define transit_realtime_FeedEntity_init_default {{{NULL}, NULL}, false, false, false, transit_realtime_TripUpdate_init_default, false, transit_realtime_VehiclePosition_init_default, false, transit_realtime_Alert_init_default, NULL}
#define transit_realtime_TripUpdate_init_default {transit_realtime_TripDescriptor_init_default, {{NULL}, NULL}, false, transit_realtime_VehicleDescriptor_init_default, false, 0, false, 0, NULL}
#define transit_realtime_TripUpdate_StopTimeEvent_init_default {false, 0, false, 0, false, 0, NULL}
#define transit_realtime_TripUpdate_StopTimeUpdate_init_default {false, 0, false, transit_realtime_TripUpdate_StopTimeEvent_init_default, false, transit_realtime_TripUpdate_StopTimeEvent_init_default, {{NULL}, NULL}, false, transit_realtime_TripUpdate_StopTimeUpdate_ScheduleRelationship_SCHEDULED, NULL}
#define transit_realtime_VehiclePosition_init_default {false, transit_realtime_TripDescriptor_init_default, false, transit_realtime_Position_init_default, false, 0, false, transit_realtime_VehiclePosition_VehicleStopStatus_IN_TRANSIT_TO, false, 0, false, _transit_realtime_VehiclePosition_CongestionLevel_MIN, {{NULL}, NULL}, false, transit_realtime_VehicleDescriptor_init_default, false, _transit_realtime_VehiclePosition_OccupancyStatus_MIN, NULL}
#define transit_realtime_Alert_init_default      {{{NULL}, NULL}, {{NULL}, NULL}, false, transit_realtime_Alert_Cause_UNKNOWN_CAUSE, false, transit_realtime_Alert_Effect_UNKNOWN_EFFECT, false, transit_realtime_TranslatedString_init_default, false, transit_realtime_TranslatedString_init_default, false, transit_realtime_TranslatedString_init_default, NULL}
#define transit_realtime_TimeRange_init_default  {false, 0, false, 0, NULL}
#define transit_realtime_Position_init_default   {0, 0, false, 0, false, 0, false, 0, NULL}
#define transit_realtime_TripDescriptor_init_default {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, _transit_realtime_TripDescriptor_ScheduleRelationship_MIN, {{NULL}, NULL}, false, 0, NULL}
#define transit_realtime_VehicleDescriptor_init_default {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, NULL}
#define transit_realtime_EntitySelector_init_default {{{NULL}, NULL}, {{NULL}, NULL}, false, 0, false, transit_realtime_TripDescriptor_init_default, {{NULL}, NULL}, NULL}
#define transit_realtime_TranslatedString_init_default {{{NULL}, NULL}, NULL}
#define transit_realtime_TranslatedString_Translation_init_default {{{NULL}, NULL}, {{NULL}, NULL}, NULL}
#define transit_realtime_FeedMessage_init_zero   {transit_realtime_FeedHeader_init_zero, {{NULL}, NULL}, NULL}
#define transit_realtime_FeedHeader_init_zero    {{{NULL}, NULL}, false, _transit_realtime_FeedHeader_Incrementality_MIN, false, 0, NULL}
#define transit_realtime_FeedEntity_init_zero    {{{NULL}, NULL}, false, 0, false, transit_realtime_TripUpdate_init_zero, false, transit_realtime_VehiclePosition_init_zero, false, transit_realtime_Alert_init_zero, NULL}
#define transit_realtime_TripUpdate_init_zero    {transit_realtime_TripDescriptor_init_zero, {{NULL}, NULL}, false, transit_realtime_VehicleDescriptor_init_zero, false, 0, false, 0, NULL}
#define transit_realtime_TripUpdate_StopTimeEvent_init_zero {false, 0, false, 0, false, 0, NULL}
#define transit_realtime_TripUpdate_StopTimeUpdate_init_zero {false, 0, false, transit_realtime_TripUpdate_StopTimeEvent_init_zero, false, transit_realtime_TripUpdate_StopTimeEvent_init_zero, {{NULL}, NULL}, false, _transit_realtime_TripUpdate_StopTimeUpdate_ScheduleRelationship_MIN, NULL}
#define transit_realtime_VehiclePosition_init_zero {false, transit_realtime_TripDescriptor_init_zero, false, transit_realtime_Position_init_zero, false, 0, false, _transit_realtime_VehiclePosition_VehicleStopStatus_MIN, false, 0, false, _transit_realtime_VehiclePosition_CongestionLevel_MIN, {{NULL}, NULL}, false, transit_realtime_VehicleDescriptor_init_zero, false, _transit_realtime_VehiclePosition_OccupancyStatus_MIN, NULL}
#define transit_realtime_Alert_init_zero         {{{NULL}, NULL}, {{NULL}, NULL}, false, _transit_realtime_Alert_Cause_MIN, false, _transit_realtime_Alert_Effect_MIN, false, transit_realtime_TranslatedString_init_zero, false, transit_realtime_TranslatedString_init_zero, false, transit_realtime_TranslatedString_init_zero, NULL}
#define transit_realtime_TimeRange_init_zero     {false, 0, false, 0, NULL}
#define transit_realtime_Position_init_zero      {0, 0, false, 0, false, 0, false, 0, NULL}
#define transit_realtime_TripDescriptor_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, false, _transit_realtime_TripDescriptor_ScheduleRelationship_MIN, {{NULL}, NULL}, false, 0, NULL}
#define transit_realtime_VehicleDescriptor_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}, NULL}
#define transit_realtime_EntitySelector_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, false, 0, false, transit_realtime_TripDescriptor_init_zero, {{NULL}, NULL}, NULL}
#define transit_realtime_TranslatedString_init_zero {{{NULL}, NULL}, NULL}
#define transit_realtime_TranslatedString_Translation_init_zero {{{NULL}, NULL}, {{NULL}, NULL}, NULL}

/* Field tags (for use in manual encoding/decoding) */
#define transit_realtime_TranslatedString_translation_tag 1
#define transit_realtime_TranslatedString_Translation_text_tag 1
#define transit_realtime_TranslatedString_Translation_language_tag 2
#define transit_realtime_VehicleDescriptor_id_tag 1
#define transit_realtime_VehicleDescriptor_label_tag 2
#define transit_realtime_VehicleDescriptor_license_plate_tag 3
#define transit_realtime_Alert_active_period_tag 1
#define transit_realtime_Alert_informed_entity_tag 5
#define transit_realtime_Alert_cause_tag         6
#define transit_realtime_Alert_effect_tag        7
#define transit_realtime_Alert_url_tag           8
#define transit_realtime_Alert_header_text_tag   10
#define transit_realtime_Alert_description_text_tag 11
#define transit_realtime_FeedHeader_gtfs_realtime_version_tag 1
#define transit_realtime_FeedHeader_incrementality_tag 2
#define transit_realtime_FeedHeader_timestamp_tag 3
#define transit_realtime_Position_latitude_tag   1
#define transit_realtime_Position_longitude_tag  2
#define transit_realtime_Position_bearing_tag    3
#define transit_realtime_Position_odometer_tag   4
#define transit_realtime_Position_speed_tag      5
#define transit_realtime_TimeRange_start_tag     1
#define transit_realtime_TimeRange_end_tag       2
#define transit_realtime_TripDescriptor_trip_id_tag 1
#define transit_realtime_TripDescriptor_start_time_tag 2
#define transit_realtime_TripDescriptor_start_date_tag 3
#define transit_realtime_TripDescriptor_schedule_relationship_tag 4
#define transit_realtime_TripDescriptor_route_id_tag 5
#define transit_realtime_TripDescriptor_direction_id_tag 6
#define transit_realtime_TripUpdate_StopTimeEvent_delay_tag 1
#define transit_realtime_TripUpdate_StopTimeEvent_time_tag 2
#define transit_realtime_TripUpdate_StopTimeEvent_uncertainty_tag 3
#define transit_realtime_EntitySelector_agency_id_tag 1
#define transit_realtime_EntitySelector_route_id_tag 2
#define transit_realtime_EntitySelector_route_type_tag 3
#define transit_realtime_EntitySelector_trip_tag 4
#define transit_realtime_EntitySelector_stop_id_tag 5
#define transit_realtime_FeedMessage_header_tag  1
#define transit_realtime_FeedMessage_entity_tag  2
#define transit_realtime_TripUpdate_trip_tag     1
#define transit_realtime_TripUpdate_stop_time_update_tag 2
#define transit_realtime_TripUpdate_vehicle_tag  3
#define transit_realtime_TripUpdate_timestamp_tag 4
#define transit_realtime_TripUpdate_delay_tag    5
#define transit_realtime_TripUpdate_StopTimeUpdate_stop_sequence_tag 1
#define transit_realtime_TripUpdate_StopTimeUpdate_arrival_tag 2
#define transit_realtime_TripUpdate_StopTimeUpdate_departure_tag 3
#define transit_realtime_TripUpdate_StopTimeUpdate_stop_id_tag 4
#define transit_realtime_TripUpdate_StopTimeUpdate_schedule_relationship_tag 5
#define transit_realtime_VehiclePosition_trip_tag 1
#define transit_realtime_VehiclePosition_position_tag 2
#define transit_realtime_VehiclePosition_current_stop_sequence_tag 3
#define transit_realtime_VehiclePosition_current_status_tag 4
#define transit_realtime_VehiclePosition_timestamp_tag 5
#define transit_realtime_VehiclePosition_congestion_level_tag 6
#define transit_realtime_VehiclePosition_stop_id_tag 7
#define transit_realtime_VehiclePosition_vehicle_tag 8
#define transit_realtime_VehiclePosition_occupancy_status_tag 9
#define transit_realtime_FeedEntity_id_tag       1
#define transit_realtime_FeedEntity_is_deleted_tag 2
#define transit_realtime_FeedEntity_trip_update_tag 3
#define transit_realtime_FeedEntity_vehicle_tag  4
#define transit_realtime_FeedEntity_alert_tag    5

/* Struct field encoding specification for nanopb */
#define transit_realtime_FeedMessage_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, MESSAGE,  header,            1) \
X(a, CALLBACK, REPEATED, MESSAGE,  entity,            2) \
X(a, CALLBACK, OPTIONAL, EXTENSION, extensions,      1000)
#define transit_realtime_FeedMessage_CALLBACK pb_default_field_callback
#define transit_realtime_FeedMessage_DEFAULT NULL
#define transit_realtime_FeedMessage_header_MSGTYPE transit_realtime_FeedHeader
#define transit_realtime_FeedMessage_entity_MSGTYPE transit_realtime_FeedEntity

#define transit_realtime_FeedHeader_FIELDLIST(X, a) \
X(a, CALLBACK, REQUIRED, STRING,   gtfs_realtime_version,   1) \
X(a, STATIC,   OPTIONAL, UENUM,    incrementality,    2) \
X(a, STATIC,   OPTIONAL, UINT64,   timestamp,         3) \
X(a, CALLBACK, OPTIONAL, EXTENSION, extensions,      1000)
#define transit_realtime_FeedHeader_CALLBACK pb_default_field_callback
#define transit_realtime_FeedHeader_DEFAULT NULL

#define transit_realtime_FeedEntity_FIELDLIST(X, a) \
X(a, CALLBACK, REQUIRED, STRING,   id,                1) \
X(a, STATIC,   OPTIONAL, BOOL,     is_deleted,        2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  trip_update,       3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  vehicle,           4) \
X(a, STATIC,   OPTIONAL, MESSAGE,  alert,             5) \
X(a, CALLBACK, OPTIONAL, EXTENSION, extensions,      1000)
#define transit_realtime_FeedEntity_CALLBACK pb_default_field_callback
#define transit_realtime_FeedEntity_DEFAULT (const pb_byte_t*)"\x10\x00\x00"
#define transit_realtime_FeedEntity_trip_update_MSGTYPE transit_realtime_TripUpdate
#define transit_realtime_FeedEntity_vehicle_MSGTYPE transit_realtime_VehiclePosition
#define transit_realtime_FeedEntity_alert_MSGTYPE transit_realtime_Alert

#define transit_realtime_TripUpdate_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, MESSAGE,  trip,              1) \
X(a, CALLBACK, REPEATED, MESSAGE,  stop_time_update,   2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  vehicle,           3) \
X(a, STATIC,   OPTIONAL, UINT64,   timestamp,         4) \
X(a, STATIC,   OPTIONAL, INT32,    delay,             5) \
X(a, CALLBACK, OPTIONAL, EXTENSION, extensions,      1000)
#define transit_realtime_TripUpdate_CALLBACK pb_default_field_callback
#define transit_realtime_TripUpdate_DEFAULT NULL
#define transit_realtime_TripUpdate_trip_MSGTYPE transit_realtime_TripDescriptor
#define transit_realtime_TripUpdate_stop_time_update_MSGTYPE transit_realtime_TripUpdate_StopTimeUpdate
#define transit_realtime_TripUpdate_vehicle_MSGTYPE transit_realtime_VehicleDescriptor

#define transit_realtime_TripUpdate_StopTimeEvent_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, INT32,    delay,             1) \
X(a, STATIC,   OPTIONAL, INT64,    time,              2) \
X(a, STATIC,   OPTIONAL, INT32,    uncertainty,       3) \
X(a, CALLBACK, OPTIONAL, EXTENSION, extensions,      1000)
#define transit_realtime_TripUpdate_StopTimeEvent_CALLBACK pb_default_field_callback
#define transit_realtime_TripUpdate_StopTimeEvent_DEFAULT NULL

#define transit_realtime_TripUpdate_StopTimeUpdate_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT32,   stop_sequence,     1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  arrival,           2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  departure,         3) \
X(a, CALLBACK, OPTIONAL, STRING,   stop_id,           4) \
X(a, STATIC,   OPTIONAL, UENUM,    schedule_relationship,   5) \
X(a, CALLBACK, OPTIONAL, EXTENSION, extensions,      1000)
#define transit_realtime_TripUpdate_StopTimeUpdate_CALLBACK pb_default_field_callback
#define transit_realtime_TripUpdate_StopTimeUpdate_DEFAULT NULL
#define transit_realtime_TripUpdate_StopTimeUpdate_arrival_MSGTYPE transit_realtime_TripUpdate_StopTimeEvent
#define transit_realtime_TripUpdate_StopTimeUpdate_departure_MSGTYPE transit_realtime_TripUpdate_StopTimeEvent

#define transit_realtime_VehiclePosition_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  trip,              1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  position,          2) \
X(a, STATIC,   OPTIONAL, UINT32,   current_stop_sequence,   3) \
X(a, STATIC,   OPTIONAL, UENUM,    current_status,    4) \
X(a, STATIC,   OPTIONAL, UINT64,   timestamp,         5) \
X(a, STATIC,   OPTIONAL, UENUM,    congestion_level,   6) \
X(a, CALLBACK, OPTIONAL, STRING,   stop_id,           7) \
X(a, STATIC,   OPTIONAL, MESSAGE,  vehicle,           8) \
X(a, STATIC,   OPTIONAL, UENUM,    occupancy_status,   9) \
X(a, CALLBACK, OPTIONAL, EXTENSION, extensions,      1000)
#define transit_realtime_VehiclePosition_CALLBACK pb_default_field_callback
#define transit_realtime_VehiclePosition_DEFAULT (const pb_byte_t*)"\x20\x02\x00"
#define transit_realtime_VehiclePosition_trip_MSGTYPE transit_realtime_TripDescriptor
#define transit_realtime_VehiclePosition_position_MSGTYPE transit_realtime_Position
#define transit_realtime_VehiclePosition_vehicle_MSGTYPE transit_realtime_VehicleDescriptor

#define transit_realtime_Alert_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  active_period,     1) \
X(a, CALLBACK, REPEATED, MESSAGE,  informed_entity,   5) \
X(a, STATIC,   OPTIONAL, UENUM,    cause,             6) \
X(a, STATIC,   OPTIONAL, UENUM,    effect,            7) \
X(a, STATIC,   OPTIONAL, MESSAGE,  url,               8) \
X(a, STATIC,   OPTIONAL, MESSAGE,  header_text,      10) \
X(a, STATIC,   OPTIONAL, MESSAGE,  description_text,  11) \
X(a, CALLBACK, OPTIONAL, EXTENSION, extensions,      1000)
#define transit_realtime_Alert_CALLBACK pb_default_field_callback
#define transit_realtime_Alert_DEFAULT (const pb_byte_t*)"\x30\x01\x38\x08\x00"
#define transit_realtime_Alert_active_period_MSGTYPE transit_realtime_TimeRange
#define transit_realtime_Alert_informed_entity_MSGTYPE transit_realtime_EntitySelector
#define transit_realtime_Alert_url_MSGTYPE transit_realtime_TranslatedString
#define transit_realtime_Alert_header_text_MSGTYPE transit_realtime_TranslatedString
#define transit_realtime_Alert_description_text_MSGTYPE transit_realtime_TranslatedString

#define transit_realtime_TimeRange_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, UINT64,   start,             1) \
X(a, STATIC,   OPTIONAL, UINT64,   end,               2) \
X(a, CALLBACK, OPTIONAL, EXTENSION, extensions,      1000)
#define transit_realtime_TimeRange_CALLBACK pb_default_field_callback
#define transit_realtime_TimeRange_DEFAULT NULL

#define transit_realtime_Position_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    latitude,          1) \
X(a, STATIC,   REQUIRED, FLOAT,    longitude,         2) \
X(a, STATIC,   OPTIONAL, FLOAT,    bearing,           3) \
X(a, STATIC,   OPTIONAL, DOUBLE,   odometer,          4) \
X(a, STATIC,   OPTIONAL, FLOAT,    speed,             5) \
X(a, CALLBACK, OPTIONAL, EXTENSION, extensions,      1000)
#define transit_realtime_Position_CALLBACK pb_default_field_callback
#define transit_realtime_Position_DEFAULT NULL

#define transit_realtime_TripDescriptor_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, STRING,   trip_id,           1) \
X(a, CALLBACK, OPTIONAL, STRING,   start_time,        2) \
X(a, CALLBACK, OPTIONAL, STRING,   start_date,        3) \
X(a, STATIC,   OPTIONAL, UENUM,    schedule_relationship,   4) \
X(a, CALLBACK, OPTIONAL, STRING,   route_id,          5) \
X(a, STATIC,   OPTIONAL, UINT32,   direction_id,      6) \
X(a, CALLBACK, OPTIONAL, EXTENSION, extensions,      1000)
#define transit_realtime_TripDescriptor_CALLBACK pb_default_field_callback
#define transit_realtime_TripDescriptor_DEFAULT NULL

#define transit_realtime_VehicleDescriptor_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, STRING,   id,                1) \
X(a, CALLBACK, OPTIONAL, STRING,   label,             2) \
X(a, CALLBACK, OPTIONAL, STRING,   license_plate,     3) \
X(a, CALLBACK, OPTIONAL, EXTENSION, extensions,      1000)
#define transit_realtime_VehicleDescriptor_CALLBACK pb_default_field_callback
#define transit_realtime_VehicleDescriptor_DEFAULT NULL

#define transit_realtime_EntitySelector_FIELDLIST(X, a) \
X(a, CALLBACK, OPTIONAL, STRING,   agency_id,         1) \
X(a, CALLBACK, OPTIONAL, STRING,   route_id,          2) \
X(a, STATIC,   OPTIONAL, INT32,    route_type,        3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  trip,              4) \
X(a, CALLBACK, OPTIONAL, STRING,   stop_id,           5) \
X(a, CALLBACK, OPTIONAL, EXTENSION, extensions,      1000)
#define transit_realtime_EntitySelector_CALLBACK pb_default_field_callback
#define transit_realtime_EntitySelector_DEFAULT NULL
#define transit_realtime_EntitySelector_trip_MSGTYPE transit_realtime_TripDescriptor

#define transit_realtime_TranslatedString_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  translation,       1) \
X(a, CALLBACK, OPTIONAL, EXTENSION, extensions,      1000)
#define transit_realtime_TranslatedString_CALLBACK pb_default_field_callback
#define transit_realtime_TranslatedString_DEFAULT NULL
#define transit_realtime_TranslatedString_translation_MSGTYPE transit_realtime_TranslatedString_Translation

#define transit_realtime_TranslatedString_Translation_FIELDLIST(X, a) \
X(a, CALLBACK, REQUIRED, STRING,   text,              1) \
X(a, CALLBACK, OPTIONAL, STRING,   language,          2) \
X(a, CALLBACK, OPTIONAL, EXTENSION, extensions,      1000)
#define transit_realtime_TranslatedString_Translation_CALLBACK pb_default_field_callback
#define transit_realtime_TranslatedString_Translation_DEFAULT NULL

extern const pb_msgdesc_t transit_realtime_FeedMessage_msg;
extern const pb_msgdesc_t transit_realtime_FeedHeader_msg;
extern const pb_msgdesc_t transit_realtime_FeedEntity_msg;
extern const pb_msgdesc_t transit_realtime_TripUpdate_msg;
extern const pb_msgdesc_t transit_realtime_TripUpdate_StopTimeEvent_msg;
extern const pb_msgdesc_t transit_realtime_TripUpdate_StopTimeUpdate_msg;
extern const pb_msgdesc_t transit_realtime_VehiclePosition_msg;
extern const pb_msgdesc_t transit_realtime_Alert_msg;
extern const pb_msgdesc_t transit_realtime_TimeRange_msg;
extern const pb_msgdesc_t transit_realtime_Position_msg;
extern const pb_msgdesc_t transit_realtime_TripDescriptor_msg;
extern const pb_msgdesc_t transit_realtime_VehicleDescriptor_msg;
extern const pb_msgdesc_t transit_realtime_EntitySelector_msg;
extern const pb_msgdesc_t transit_realtime_TranslatedString_msg;
extern const pb_msgdesc_t transit_realtime_TranslatedString_Translation_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define transit_realtime_FeedMessage_fields &transit_realtime_FeedMessage_msg
#define transit_realtime_FeedHeader_fields &transit_realtime_FeedHeader_msg
#define transit_realtime_FeedEntity_fields &transit_realtime_FeedEntity_msg
#define transit_realtime_TripUpdate_fields &transit_realtime_TripUpdate_msg
#define transit_realtime_TripUpdate_StopTimeEvent_fields &transit_realtime_TripUpdate_StopTimeEvent_msg
#define transit_realtime_TripUpdate_StopTimeUpdate_fields &transit_realtime_TripUpdate_StopTimeUpdate_msg
#define transit_realtime_VehiclePosition_fields &transit_realtime_VehiclePosition_msg
#define transit_realtime_Alert_fields &transit_realtime_Alert_msg
#define transit_realtime_TimeRange_fields &transit_realtime_TimeRange_msg
#define transit_realtime_Position_fields &transit_realtime_Position_msg
#define transit_realtime_TripDescriptor_fields &transit_realtime_TripDescriptor_msg
#define transit_realtime_VehicleDescriptor_fields &transit_realtime_VehicleDescriptor_msg
#define transit_realtime_EntitySelector_fields &transit_realtime_EntitySelector_msg
#define transit_realtime_TranslatedString_fields &transit_realtime_TranslatedString_msg
#define transit_realtime_TranslatedString_Translation_fields &transit_realtime_TranslatedString_Translation_msg

/* Maximum encoded size of messages (where known) */
/* transit_realtime_FeedMessage_size depends on runtime parameters */
/* transit_realtime_FeedHeader_size depends on runtime parameters */
/* transit_realtime_FeedEntity_size depends on runtime parameters */
/* transit_realtime_TripUpdate_size depends on runtime parameters */
/* transit_realtime_TripUpdate_StopTimeUpdate_size depends on runtime parameters */
/* transit_realtime_VehiclePosition_size depends on runtime parameters */
/* transit_realtime_Alert_size depends on runtime parameters */
/* transit_realtime_TripDescriptor_size depends on runtime parameters */
/* transit_realtime_VehicleDescriptor_size depends on runtime parameters */
/* transit_realtime_EntitySelector_size depends on runtime parameters */
/* transit_realtime_TranslatedString_size depends on runtime parameters */
/* transit_realtime_TranslatedString_Translation_size depends on runtime parameters */
#define transit_realtime_Position_size           29
#define transit_realtime_TimeRange_size          22
#define transit_realtime_TripUpdate_StopTimeEvent_size 33

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
